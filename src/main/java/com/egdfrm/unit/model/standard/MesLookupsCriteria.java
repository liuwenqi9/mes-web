package com.egdfrm.unit.model.standard;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MesLookupsCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public MesLookupsCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andLookupTypeIsNull() {
            addCriterion("LOOKUP_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andLookupTypeIsNotNull() {
            addCriterion("LOOKUP_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andLookupTypeEqualTo(String value) {
            addCriterion("LOOKUP_TYPE =", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeNotEqualTo(String value) {
            addCriterion("LOOKUP_TYPE <>", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeGreaterThan(String value) {
            addCriterion("LOOKUP_TYPE >", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeGreaterThanOrEqualTo(String value) {
            addCriterion("LOOKUP_TYPE >=", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeLessThan(String value) {
            addCriterion("LOOKUP_TYPE <", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeLessThanOrEqualTo(String value) {
            addCriterion("LOOKUP_TYPE <=", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeLike(String value) {
            addCriterion("LOOKUP_TYPE like", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeNotLike(String value) {
            addCriterion("LOOKUP_TYPE not like", value, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeIn(List<String> values) {
            addCriterion("LOOKUP_TYPE in", values, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeNotIn(List<String> values) {
            addCriterion("LOOKUP_TYPE not in", values, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeBetween(String value1, String value2) {
            addCriterion("LOOKUP_TYPE between", value1, value2, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupTypeNotBetween(String value1, String value2) {
            addCriterion("LOOKUP_TYPE not between", value1, value2, "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupCodeIsNull() {
            addCriterion("LOOKUP_CODE is null");
            return (Criteria) this;
        }

        public Criteria andLookupCodeIsNotNull() {
            addCriterion("LOOKUP_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andLookupCodeEqualTo(String value) {
            addCriterion("LOOKUP_CODE =", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeNotEqualTo(String value) {
            addCriterion("LOOKUP_CODE <>", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeGreaterThan(String value) {
            addCriterion("LOOKUP_CODE >", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeGreaterThanOrEqualTo(String value) {
            addCriterion("LOOKUP_CODE >=", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeLessThan(String value) {
            addCriterion("LOOKUP_CODE <", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeLessThanOrEqualTo(String value) {
            addCriterion("LOOKUP_CODE <=", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeLike(String value) {
            addCriterion("LOOKUP_CODE like", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeNotLike(String value) {
            addCriterion("LOOKUP_CODE not like", value, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeIn(List<String> values) {
            addCriterion("LOOKUP_CODE in", values, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeNotIn(List<String> values) {
            addCriterion("LOOKUP_CODE not in", values, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeBetween(String value1, String value2) {
            addCriterion("LOOKUP_CODE between", value1, value2, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andLookupCodeNotBetween(String value1, String value2) {
            addCriterion("LOOKUP_CODE not between", value1, value2, "lookupCode");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagIsNull() {
            addCriterion("ENABLED_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagIsNotNull() {
            addCriterion("ENABLED_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagEqualTo(String value) {
            addCriterion("ENABLED_FLAG =", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagNotEqualTo(String value) {
            addCriterion("ENABLED_FLAG <>", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagGreaterThan(String value) {
            addCriterion("ENABLED_FLAG >", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagGreaterThanOrEqualTo(String value) {
            addCriterion("ENABLED_FLAG >=", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagLessThan(String value) {
            addCriterion("ENABLED_FLAG <", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagLessThanOrEqualTo(String value) {
            addCriterion("ENABLED_FLAG <=", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagLike(String value) {
            addCriterion("ENABLED_FLAG like", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagNotLike(String value) {
            addCriterion("ENABLED_FLAG not like", value, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagIn(List<String> values) {
            addCriterion("ENABLED_FLAG in", values, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagNotIn(List<String> values) {
            addCriterion("ENABLED_FLAG not in", values, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagBetween(String value1, String value2) {
            addCriterion("ENABLED_FLAG between", value1, value2, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagNotBetween(String value1, String value2) {
            addCriterion("ENABLED_FLAG not between", value1, value2, "enabledFlag");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveIsNull() {
            addCriterion("START_DATE_ACTIVE is null");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveIsNotNull() {
            addCriterion("START_DATE_ACTIVE is not null");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE_ACTIVE =", value, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveNotEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE_ACTIVE <>", value, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveGreaterThan(Date value) {
            addCriterionForJDBCDate("START_DATE_ACTIVE >", value, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE_ACTIVE >=", value, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveLessThan(Date value) {
            addCriterionForJDBCDate("START_DATE_ACTIVE <", value, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE_ACTIVE <=", value, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveIn(List<Date> values) {
            addCriterionForJDBCDate("START_DATE_ACTIVE in", values, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveNotIn(List<Date> values) {
            addCriterionForJDBCDate("START_DATE_ACTIVE not in", values, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("START_DATE_ACTIVE between", value1, value2, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andStartDateActiveNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("START_DATE_ACTIVE not between", value1, value2, "startDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveIsNull() {
            addCriterion("END_DATE_ACTIVE is null");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveIsNotNull() {
            addCriterion("END_DATE_ACTIVE is not null");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE_ACTIVE =", value, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveNotEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE_ACTIVE <>", value, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveGreaterThan(Date value) {
            addCriterionForJDBCDate("END_DATE_ACTIVE >", value, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE_ACTIVE >=", value, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveLessThan(Date value) {
            addCriterionForJDBCDate("END_DATE_ACTIVE <", value, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE_ACTIVE <=", value, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveIn(List<Date> values) {
            addCriterionForJDBCDate("END_DATE_ACTIVE in", values, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveNotIn(List<Date> values) {
            addCriterionForJDBCDate("END_DATE_ACTIVE not in", values, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("END_DATE_ACTIVE between", value1, value2, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andEndDateActiveNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("END_DATE_ACTIVE not between", value1, value2, "endDateActive");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CREATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(Long value) {
            addCriterion("CREATED_BY =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(Long value) {
            addCriterion("CREATED_BY <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(Long value) {
            addCriterion("CREATED_BY >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(Long value) {
            addCriterion("CREATED_BY <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<Long> values) {
            addCriterion("CREATED_BY in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<Long> values) {
            addCriterion("CREATED_BY not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNull() {
            addCriterion("CREATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreationDateEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE =", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE <>", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATION_DATE >", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE >=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThan(Date value) {
            addCriterionForJDBCDate("CREATION_DATE <", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE <=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateIn(List<Date> values) {
            addCriterionForJDBCDate("CREATION_DATE in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATION_DATE not in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATION_DATE between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATION_DATE not between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNull() {
            addCriterion("LAST_UPDATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNotNull() {
            addCriterion("LAST_UPDATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY =", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <>", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThan(Long value) {
            addCriterion("LAST_UPDATED_BY >", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY >=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThan(Long value) {
            addCriterion("LAST_UPDATED_BY <", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY not in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY not between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLookupTypeLikeInsensitive(String value) {
            addCriterion("upper(LOOKUP_TYPE) like", value.toUpperCase(), "lookupType");
            return (Criteria) this;
        }

        public Criteria andLookupCodeLikeInsensitive(String value) {
            addCriterion("upper(LOOKUP_CODE) like", value.toUpperCase(), "lookupCode");
            return (Criteria) this;
        }

        public Criteria andDescriptionLikeInsensitive(String value) {
            addCriterion("upper(DESCRIPTION) like", value.toUpperCase(), "description");
            return (Criteria) this;
        }

        public Criteria andEnabledFlagLikeInsensitive(String value) {
            addCriterion("upper(ENABLED_FLAG) like", value.toUpperCase(), "enabledFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated do_not_delete_during_merge Mon Dec 05 14:32:50 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MES_LOOKUPS
     *
     * @mbggenerated Mon Dec 05 14:32:50 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}